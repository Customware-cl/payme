#!/usr/bin/env -S deno run --allow-net --allow-env

import { WhatsAppClient } from '../lib/whatsapp-client.ts';

// Cargar variables de entorno
const accessToken = Deno.env.get('WHATSAPP_ACCESS_TOKEN');
const phoneNumberId = Deno.env.get('WHATSAPP_PHONE_NUMBER_ID');
const businessAccountId = Deno.env.get('WHATSAPP_BUSINESS_ACCOUNT_ID');

if (!accessToken || !phoneNumberId) {
  console.error('‚ùå Error: Variables de entorno WHATSAPP_ACCESS_TOKEN y WHATSAPP_PHONE_NUMBER_ID son requeridas');
  Deno.exit(1);
}

// Configurar cliente de WhatsApp
const client = new WhatsAppClient({
  accessToken,
  phoneNumberId,
  businessAccountId,
});

async function testSendMessage() {
  console.log('üß™ Iniciando prueba de env√≠o de mensaje de WhatsApp...\n');

  // N√∫mero de prueba (cambiar por tu n√∫mero)
  const testPhoneNumber = '+56964943476'; // Formato E.164

  console.log(`üì± N√∫mero de destino: ${testPhoneNumber}`);
  console.log(`üìû Phone Number ID: ${phoneNumberId}`);
  console.log(`üîë Access Token: ${accessToken.substring(0, 20)}...`);
  console.log('');

  try {
    // Prueba 1: Mensaje de texto simple
    console.log('üìù Enviando mensaje de texto simple...');
    const textResponse = await client.sendTextMessage(
      testPhoneNumber,
      '¬°Hola! Este es un mensaje de prueba desde el bot de PrestaBot. ü§ñ\n\nSi recibes este mensaje, la configuraci√≥n de WhatsApp est√° funcionando correctamente.'
    );

    console.log('‚úÖ Mensaje de texto enviado exitosamente');
    console.log(`   ID del mensaje: ${textResponse.messages[0].id}`);
    console.log(`   WAMID: ${textResponse.messages[0].message_status || 'N/A'}`);
    console.log('');

    // Esperar un poco antes del siguiente mensaje
    await new Promise(resolve => setTimeout(resolve, 2000));

    // Prueba 2: Mensaje interactivo con botones
    console.log('üîò Enviando mensaje interactivo con botones...');
    const interactiveResponse = await client.sendInteractiveMessage(
      testPhoneNumber,
      '¬øC√≥mo te pareci√≥ la prueba del bot?',
      [
        { id: 'test_good', title: 'üëç Excelente' },
        { id: 'test_ok', title: 'üëå Bien' },
        { id: 'test_bad', title: 'üëé Mejorable' }
      ],
      'üß™ Prueba de Botones',
      'PrestaBot - Sistema de pruebas'
    );

    console.log('‚úÖ Mensaje interactivo enviado exitosamente');
    console.log(`   ID del mensaje: ${interactiveResponse.messages[0].id}`);
    console.log('');

    console.log('üéâ ¬°Todas las pruebas completadas exitosamente!');
    console.log('');
    console.log('üìã Resumen:');
    console.log('   ‚Ä¢ Mensaje de texto: ‚úÖ');
    console.log('   ‚Ä¢ Mensaje interactivo: ‚úÖ');
    console.log('   ‚Ä¢ Cliente configurado correctamente: ‚úÖ');

  } catch (error) {
    console.error('‚ùå Error durante la prueba:', error.message);

    if (error.code) {
      console.error(`   C√≥digo de error: ${error.code}`);
    }

    if (error.type) {
      console.error(`   Tipo de error: ${error.type}`);
    }

    // Sugerencias de soluci√≥n seg√∫n el tipo de error
    if (error.message.includes('access token')) {
      console.log('\nüí° Sugerencia: Verifica que el WHATSAPP_ACCESS_TOKEN sea v√°lido y no haya expirado');
    }

    if (error.message.includes('phone number')) {
      console.log('\nüí° Sugerencia: Verifica que el WHATSAPP_PHONE_NUMBER_ID sea correcto');
    }

    if (error.message.includes('recipient')) {
      console.log('\nüí° Sugerencia: Verifica que el n√∫mero de tel√©fono de destino est√© en formato E.164');
    }

    Deno.exit(1);
  }
}

// Funci√≥n para validar el formato del n√∫mero de tel√©fono
function validatePhoneNumber(phone: string): boolean {
  return WhatsAppClient.isValidE164(phone);
}

// Verificar argumentos de l√≠nea de comandos
const args = Deno.args;
if (args.length > 0) {
  const phoneArg = args[0];
  if (validatePhoneNumber(phoneArg)) {
    console.log(`üì± Usando n√∫mero personalizado: ${phoneArg}`);
    // Aqu√≠ podr√≠as usar el n√∫mero personalizado
  } else {
    console.error(`‚ùå N√∫mero de tel√©fono inv√°lido: ${phoneArg}`);
    console.log('   El n√∫mero debe estar en formato E.164 (ej: +56912345678)');
    Deno.exit(1);
  }
}

// Ejecutar la prueba
if (import.meta.main) {
  await testSendMessage();
}